name: Create Release Draft

on:
  push:
  workflow_dispatch:

jobs:
  linux-compat:
    name: Build Linux Compat (glibc 2.17-compatible)
    runs-on: ubuntu-latest
    steps:
      - name: Check out build code
        uses: actions/checkout@v2

      - name: Check out nushell code
        uses: actions/checkout@v2
        with:
          repository: nushell/nushell
          path: nushell

      - name: Docker build
        run: docker build -t nushell-build .

      - name: Extract binaries
        run: |
          mkdir output
          docker container create --name nushell-build nushell-build
          docker cp nushell-build:/usr/src/nushell/bin/ ./
          mv bin/nu* output/
          docker cp nushell-build:/usr/src/nushell/README.build.txt output/
          docker cp nushell-build:/usr/src/nushell/LICENSE output/

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-compat
          path: output/*

  linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: nushell/nushell
          path: nushell
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Clang Dependencies
        run: sudo apt-get install libxcb-composite0-dev pkg-config libssl-dev libx11-dev

      - name: Build
        run: |
          cd nushell
          cargo install --path . --root . --features=extra
          cd ..
          mkdir output
          cp nushell/bin/nu* output/
          cp nushell/README.build.txt output/README.txt
          cp nushell/LICENSE output/LICENSE

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: output/*

  macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: nushell/nushell
          path: nushell
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      #- uses: Homebrew/actions/setup-homebrew@master 

      - name: Build
        run: |
          cd nushell
          cargo install --path . --root . --features=extra
          cd ..
          mkdir output
          cp nushell/bin/nu* output/
          cp nushell/README.build.txt output/README.txt
          cp nushell/LICENSE output/LICENSE
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: output/*

  windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: nushell/nushell
          path: nushell
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        run: |
          mkdir output
          cd nushell
          cargo install --path . --root . --features=extra
          cd ..

          mkdir output
          Invoke-WebRequest -Uri "https://github.com/jftuga/less-Windows/releases/download/less-v562.0/less.exe" -OutFile "output\less.exe"
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/jftuga/less-Windows/master/LICENSE" -OutFile "output\LICENSE-for-less.txt"

          cp nushell\bin\nu* output\
          cp nushell\LICENSE output\
          cp nushell/README.build.txt output\README.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: output\*
